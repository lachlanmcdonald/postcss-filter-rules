const splitSelectors = require('./splitSelectors');

describe('parts selector', () => {
	it.each([
		['*', ['*']],
		['#a', ['#a']],
		['#a:not(.b)', ['#a:not(.b)']],
		['#a:not(  .b:not(.c  ))', ['#a:not(.b:not(.c))']],
		['#a:matches(.b,   .c)', ['#a:matches(.b,.c)']],
		['#a:matches(.b:not(.c), .d)', ['#a:matches(.b:not(.c),.d)']],
		['#a:has(.b, .c)', ['#a:has(.b,.c)']],
		['#a.b', ['#a.b']],
		['#a.b .c.d', ['#a.b', '.c.d']],
		['#a[foo]', ['#a[foo]']],
		['#a[foo="bar"]', ['#a[foo="bar"]']],
		['#a[foo="foo bar"]', ['#a[foo="foo bar"]']],
		['#a[foo~="bar"]', ['#a[foo~="bar"]']],
		['#a[foo~="foo bar"]', ['#a[foo~="foo bar"]']],
		['#a[foo^="bar"]', ['#a[foo^="bar"]']],
		['#a[foo^="foo bar"]', ['#a[foo^="foo bar"]']],
		['#a[foo$="bar"]', ['#a[foo$="bar"]']],
		['#a[foo$="foo bar"]', ['#a[foo$="foo bar"]']],
		['#a[foo*="bar"]', ['#a[foo*="bar"]']],
		['#a[foo*="foo bar"]', ['#a[foo*="foo bar"]']],
		['#a[foo|="fruit"]', ['#a[foo|="fruit"]']],
		['#a[foo|="foo bar"]', ['#a[foo|="foo bar"]']],
		['#a:dir(ltr)', ['#a:dir(ltr)']],
		['#a:lang(zh)', ['#a:lang(zh)']],
		['#a:any-link', ['#a:any-link']],
		['#a:link', ['#a:link']],
		['#a:visited', ['#a:visited']],
		['#a:target', ['#a:target']],
		['#a:scope', ['#a:scope']],
		['#a:current', ['#a:current']],
		['#a:current(.b)', ['#a:current(.b)']],
		['#a:past', ['#a:past']],
		['#a:future', ['#a:future']],
		['#a:active', ['#a:active']],
		['#a:hover', ['#a:hover']],
		['#a:focus', ['#a:focus']],
		['#a:drop', ['#a:drop']],
		['#a:drop(active)', ['#a:drop(active)']],
		['#a:drop(valid)', ['#a:drop(valid)']],
		['#a:drop(invalid)', ['#a:drop(invalid)']],
		['#a:enabled', ['#a:enabled']],
		['#a:disabled', ['#a:disabled']],
		['#a:read-write', ['#a:read-write']],
		['#a:read-only', ['#a:read-only']],
		['#a:placeholder-shown', ['#a:placeholder-shown']],
		['#a:default', ['#a:default']],
		['#a:checked', ['#a:checked']],
		['#a:indeterminate', ['#a:indeterminate']],
		['#a:valid', ['#a:valid']],
		['#a:invalid', ['#a:invalid']],
		['#a:in-range', ['#a:in-range']],
		['#a:out-of-range', ['#a:out-of-range']],
		['#a:required', ['#a:required']],
		['#a:optional', ['#a:optional']],
		['#a:user-error', ['#a:user-error']],
		['#a:root', ['#a:root']],
		['#a:empty', ['#a:empty']],
		['#a:blank', ['#a:blank']],
		['#a:nth-child(odd)', ['#a:nth-child(odd)']],
		['#a:nth-child(even)', ['#a:nth-child(even)']],
		['#a:nth-child(2n+1)', ['#a:nth-child(2n+1)']],
		['#a:nth-last-child(even)', ['#a:nth-last-child(even)']],
		['#a:first-child', ['#a:first-child']],
		['#a:last-child', ['#a:last-child']],
		['#a:only-child', ['#a:only-child']],
		['#a::after', ['#a::after']],
		['#a::before', ['#a::before']],
		['#a:nth-of-type(1)', ['#a:nth-of-type(1)']],
		['#a:nth-last-of-type(1)', ['#a:nth-last-of-type(1)']],
		['#a:first-of-type', ['#a:first-of-type']],
		['#a:last-of-type', ['#a:last-of-type']],
		['#a:only-of-type', ['#a:only-of-type']],
		['#a .b', ['#a', '.b']],
		['#a div video', ['#a', 'div', 'video']],
		['#a > .b', ['#a', '.b']],
		['#a>.b', ['#a', '.b']],
		['#a + .b', ['#a', '.b']],
		['#a.b.c + .d .e', ['#a.b.c', '.d', '.e']],
		['#a+.b', ['#a', '.b']],
		['#a ~ .b', ['#a', '.b']],
		['#a~.b', ['#a', '.b']],
		['.b || #a', ['.b', '#a']],
		['.b||#a', ['.b', '#a']],
		['#a:nth-column(3)', ['#a:nth-column(3)']],
		['#a:nth-last-column(3)', ['#a:nth-last-column(3)']],
		['#a:playing', ['#a:playing']],
		['#a:paused', ['#a:paused']],
	])('Splits: %s', (input, expected) => {
		expect(splitSelectors(input)).toEqual(expected);
	});
});
